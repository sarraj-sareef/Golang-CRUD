// Code generated by MockGen. DO NOT EDIT.
// Source: book_api.go

// Package models is a generated GoMock package.
package models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
)

// Mockibook is a mock of ibook interface.
type Mockibook struct {
	ctrl     *gomock.Controller
	recorder *MockibookMockRecorder
}

// MockibookMockRecorder is the mock recorder for Mockibook.
type MockibookMockRecorder struct {
	mock *Mockibook
}

// NewMockibook creates a new mock instance.
func NewMockibook(ctrl *gomock.Controller) *Mockibook {
	mock := &Mockibook{ctrl: ctrl}
	mock.recorder = &MockibookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockibook) EXPECT() *MockibookMockRecorder {
	return m.recorder
}

// CreateBook mocks base method.
func (m *Mockibook) CreateBook() *Book {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBook")
	ret0, _ := ret[0].(*Book)
	return ret0
}

// CreateBook indicates an expected call of CreateBook.
func (mr *MockibookMockRecorder) CreateBook() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBook", reflect.TypeOf((*Mockibook)(nil).CreateBook))
}

// DeleteBook mocks base method.
func (m *Mockibook) DeleteBook(ID int64) Book {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBook", ID)
	ret0, _ := ret[0].(Book)
	return ret0
}

// DeleteBook indicates an expected call of DeleteBook.
func (mr *MockibookMockRecorder) DeleteBook(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBook", reflect.TypeOf((*Mockibook)(nil).DeleteBook), ID)
}

// GetAllBooks mocks base method.
func (m *Mockibook) GetAllBooks() []Book {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllBooks")
	ret0, _ := ret[0].([]Book)
	return ret0
}

// GetAllBooks indicates an expected call of GetAllBooks.
func (mr *MockibookMockRecorder) GetAllBooks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllBooks", reflect.TypeOf((*Mockibook)(nil).GetAllBooks))
}

// GetBookById mocks base method.
func (m *Mockibook) GetBookById(Id int64) (*Book, *gorm.DB) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookById", Id)
	ret0, _ := ret[0].(*Book)
	ret1, _ := ret[1].(*gorm.DB)
	return ret0, ret1
}

// GetBookById indicates an expected call of GetBookById.
func (mr *MockibookMockRecorder) GetBookById(Id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookById", reflect.TypeOf((*Mockibook)(nil).GetBookById), Id)
}
